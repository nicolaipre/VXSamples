name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: "Publish release"
    runs-on: "ubuntu-latest"
    #needs: build
    environment:
      name: deploy
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      #if: github.event_name == 'release'
      - name: Checkout code
        uses: "actions/checkout@v4"

      - name: Set up Python 3.12
        uses: "actions/setup-python@v5"
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: |
          poetry run python -m build
          poetry run twine check dist/*

      - name: Download build artifacts
        uses: "actions/download-artifact@v4"
        with:
          name: dist
          path: dist

      # Temporarily commented out to prevent accidental publishing
      # - name: Publish to Test PyPI
      #   run: |
      #     poetry run twine upload --repository testpypi dist/*
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.test_pypi_password }}

      # - name: Publish to PyPI
      #   run: |
      #     poetry run twine upload dist/*
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.pypi_password }}
